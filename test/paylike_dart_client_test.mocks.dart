// Mocks generated by Mockito 5.0.15 from annotations
// in paylike_dart_client/test/paylike_dart_client_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;
import 'dart:io' as _i2;

import 'package:mockito/mockito.dart' as _i1;
import 'package:paylike_dart_request/src/paylike_dart_request_base.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeHttpClient_0 extends _i1.Fake implements _i2.HttpClient {}

class _FakePaylikeRequester_1 extends _i1.Fake implements _i3.PaylikeRequester {
}

class _FakePaylikeResponse_2 extends _i1.Fake implements _i3.PaylikeResponse {}

class _FakeHttpClientResponse_3 extends _i1.Fake
    implements _i2.HttpClientResponse {}

/// A class which mocks [PaylikeRequester].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaylikeRequester extends _i1.Mock implements _i3.PaylikeRequester {
  MockPaylikeRequester() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Function get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: () {})
          as Function);
  @override
  set log(Function? _log) => super.noSuchMethod(Invocation.setter(#log, _log),
      returnValueForMissingStub: null);
  @override
  _i2.HttpClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeHttpClient_0()) as _i2.HttpClient);
  @override
  set client(_i2.HttpClient? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  _i3.PaylikeRequester setLog(Function? log) =>
      (super.noSuchMethod(Invocation.method(#setLog, [log]),
          returnValue: _FakePaylikeRequester_1()) as _i3.PaylikeRequester);
  @override
  _i3.PaylikeRequester setClient(_i2.HttpClient? client) =>
      (super.noSuchMethod(Invocation.method(#setClient, [client]),
          returnValue: _FakePaylikeRequester_1()) as _i3.PaylikeRequester);
  @override
  _i4.Future<_i3.PaylikeResponse> request(
          String? endpoint, _i3.RequestOptions? opts) =>
      (super.noSuchMethod(Invocation.method(#request, [endpoint, opts]),
              returnValue:
                  Future<_i3.PaylikeResponse>.value(_FakePaylikeResponse_2()))
          as _i4.Future<_i3.PaylikeResponse>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PaylikeResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaylikeResponse extends _i1.Mock implements _i3.PaylikeResponse {
  MockPaylikeResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.HttpClientResponse get response =>
      (super.noSuchMethod(Invocation.getter(#response),
          returnValue: _FakeHttpClientResponse_3()) as _i2.HttpClientResponse);
  @override
  set response(_i2.HttpClientResponse? _response) =>
      super.noSuchMethod(Invocation.setter(#response, _response),
          returnValueForMissingStub: null);
  @override
  _i4.Future<String> getBody() =>
      (super.noSuchMethod(Invocation.method(#getBody, []),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<_i4.Stream<dynamic>> getBodyReader() =>
      (super.noSuchMethod(Invocation.method(#getBodyReader, []),
              returnValue:
                  Future<_i4.Stream<dynamic>>.value(Stream<dynamic>.empty()))
          as _i4.Future<_i4.Stream<dynamic>>);
  @override
  String toString() => super.toString();
}
